{"version":3,"sources":["components/reactsApp.js","components/demo.js","App.js","reportWebVitals.js","index.js"],"names":["ReactApp","useState","city","setCity","cityname","setCityName","search","setSearch","coord","setCoord","useEffect","a","url","fetch","response","json","resJson","main","name","lon","lat","console","log","fetchAPI","className","type","defaultValue","onChange","event","target","value","temp","Demo","requestOptions","method","mode","headers","body","JSON","stringify","res","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsDeA,EApDA,WACX,MAAqBC,mBAAS,aAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA6BF,mBAAS,aAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAyBJ,mBAAS,aAAlC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAuBN,mBAAS,CAAC,IAAI,MAArC,mBAAOO,EAAP,KAAaC,EAAb,KAmBA,OAlBAC,qBAAU,WACNP,EAAQ,QACM,uCAAC,gCAAAQ,EAAA,6DAELC,EAFK,2DAEmDN,EAFnD,iEAGUO,MAAMD,GAHhB,cAGLE,EAHK,gBAISA,EAASC,OAJlB,OAILC,EAJK,OAKXb,EAAQa,EAAQC,MAChBZ,EAAYW,EAAQE,MACjBF,EAAQR,OACXC,EAAS,CAACO,EAAQR,MAAMW,IAAIH,EAAQR,MAAMY,MAC1CC,QAAQC,IAAIN,GATD,4CAAD,oDAYdO,KACF,CAACjB,IAIC,sBAAKkB,UAAU,eAAf,UAEI,uBACAC,KAAK,SACLD,UAAU,aACVE,aAAcpB,EACdqB,SAAU,SAACC,GACPrB,EAAUqB,EAAMC,OAAOC,OACvB3B,EAAQyB,EAAMC,OAAOC,UAIvB5B,EAGE,gCACI,wCAAWE,KACX,+CAAkBF,EAAK6B,KAAvB,cACA,uBACA,6CAAgBvB,EAAM,GAAtB,kBAAyCA,EAAM,SANtD,4CCFEwB,EAnCJ,WACP,MAAkB/B,mBAAS,MAA3B,mBACA,GADA,UACoBA,mBAAS,OAA7B,6BA0BA,OAxBAS,qBAAU,YAEQ,uCAAC,gCAAAC,EAAA,6DACLsB,EAAiB,CACnBC,OAAQ,OACRC,KAAK,UACLC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAErB,KAAM,mBAEvB,yBAPC,SAQKL,MADN,yBACgBoB,GARf,cAQLO,EARK,YASXnB,QATW,SASOmB,EATP,2BASHlB,IATG,gBAUPkB,EAVO,kCAWcA,EAAIzB,OAXlB,QAWDC,EAXC,OAYXK,QAAQC,IAAIN,GAZD,4CAAD,qDAmBdO,MAIA,yB,MChBOkB,MAXf,WACE,OACE,sBAAKjB,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,8BACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ab7c3f5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ReactApp=()=>{\r\n    const [city,setCity]=useState('Gorakhpur')\r\n    const [cityname,setCityName]=useState('Gorakhpur')\r\n    const [search,setSearch]=useState(\"Gorakhpur\")\r\n    const [coord,setCoord]=useState([\"0\",\"1\"]);\r\n    useEffect(()=>{\r\n        setCity(\"Wait\")\r\n        const fetchAPI=async ()=>{\r\n            \r\n            const url=`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=3bd5599cff906aa5f9efc20ce75c0b47`;\r\n            const response=await fetch(url);\r\n            const resJson=await response.json();\r\n            setCity(resJson.main);\r\n            setCityName(resJson.name)\r\n            if(resJson.coord)\r\n            setCoord([resJson.coord.lon,resJson.coord.lat]);\r\n            console.log(resJson)\r\n            //if(status)setStatus(false)\r\n        }\r\n        fetchAPI();\r\n    },[search]);\r\n\r\n\r\n    return (\r\n        <div className=\"reactApp-div\">\r\n            \r\n            <input\r\n            type=\"search\"\r\n            className=\"search-box\"\r\n            defaultValue={search}\r\n            onChange={(event)=>{\r\n                setSearch(event.target.value)\r\n                setCity(event.target.value)\r\n                \r\n            }}/>\r\n\r\n            {!city?\r\n            (<p>No Data</p>):\r\n                (\r\n                <div>\r\n                    <p>City : {cityname}</p>\r\n                    <p>Temperature : {city.temp} Celsius</p>\r\n                    <br></br>\r\n                    <p>Latitude :  {coord[0]} | Longitude : {coord[1]}</p>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ReactApp;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Demo=()=>{\r\n    const [name,setN]=useState(null)\r\n    const [age,setAAAg]=useState(null)\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchAPI=async ()=>{\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                mode:'no-cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ name: 'learntothrive' })\r\n            };\r\n            const url='http://localhost:5000/';\r\n            const res=await fetch(url,requestOptions);\r\n            console.log(await res)\r\n            if(!res){\r\n                const resJson=await  res.json()\r\n            console.log(resJson)\r\n            }\r\n            \r\n            //console.log(resJson)\r\n            //setAAAg(resJson.age)\r\n            //setN(resJson.name)\r\n        }\r\n        fetchAPI();\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo","import ReactApp  from \"./components/reactsApp\";\nimport Demo  from \"./components/demo\";\nimport '../src/components/css/style.css';\n\nfunction App() {\n  return (\n    <div className=\"main-content\">\n      <h1 className=\"main-heading\">Weather App Demo</h1>\n      <ReactApp/>\n      <Demo/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}